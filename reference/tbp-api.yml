openapi: 3.0.0
info:
  title: TBP API
  version: '1.0'
  contact: {}
  description: TBP Core API
servers:
  - url: 'http://localhost:3000'
paths:
  '/bots/{botID}/messages':
    get:
      summary: List messages
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
              examples: {}
      operationId: get-bot-messages
      description: List messages for a bot identified by botID
      parameters: []
    parameters:
      - schema:
          type: string
          format: uuid
        name: botID
        in: path
        required: true
  '/bots/{botID}/userattributes':
    parameters:
      - schema:
          type: string
          format: uuid
        name: botID
        in: path
        required: true
    get:
      summary: List user attributes for bot or user
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserAttribute'
              examples: {}
      operationId: get-bot-userattributes
      description: 'List user attributes for a bot identified by botID, optionally scoped to a given userID'
      parameters:
        - schema:
            type: string
          in: query
          name: user
          description: user identifier (email or external ID)
  '/bots/{botID}/userattributes/{userattributeID}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: botID
        in: path
        required: true
      - schema:
          type: string
          format: uuid
        name: userattributeID
        in: path
        required: true
    get:
      summary: Get  user attribute value for a user
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/vnd.api+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UserAttribute'
                required:
                  - data
      operationId: get-userattribute-for-user
      description: Get the value of a user attribute for a given user
      parameters:
        - schema:
            type: string
          in: query
          name: user
          description: 'user identifier (email, external ID)'
    post:
      summary: Set a user attribute value for a user
      operationId: set-userattribute-for-user
      responses:
        '200':
          description: OK
      description: Set the value of a user attribute for a given user
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
      parameters: []
  /activity:
    post:
      summary: Create activity
      operationId: activity-create
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Activity'
              examples: {}
      description: Send a message to a given user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/NewActivity'
            examples: {}
        description: ''
    parameters: []
  '/bots/{botID}/users/{userID}/state/{userAttributeID}':
    parameters:
      - schema:
          type: string
          format: uuid
        name: botID
        in: path
        required: true
      - schema:
          type: string
        name: userID
        in: path
        required: true
      - schema:
          type: string
        name: userAttributeID
        in: path
        required: true
    patch:
      summary: ''
      operationId: patch-bots-botID-users-userID-state-userAttributeId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  value:
                    type: string
                required:
                  - value
      description: '#WIP'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                value:
                  type: string
              required:
                - value
components:
  schemas:
    Message:
      title: Message
      type: object
      description: Message
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          pattern: message
        attributes:
          type: object
          required:
            - name
          properties:
            name:
              type: string
      required:
        - id
        - type
        - attributes
      x-examples: {}
    UserAttribute:
      title: UserAttribute
      type: object
      description: User attribute
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          pattern: userattribute
        attributes:
          type: object
          required:
            - name
          properties:
            name:
              type: string
      required:
        - id
        - type
        - attributes
    NewActivity:
      title: NewActivity
      type: object
      x-examples:
        Typical request:
          type: activities
          attributes:
            recipient: michael@customersupportbots.com
            from: dee192b0-275e-44a2-9c77-32b75da2f26f
            message: 3eb7c4fd-0d67-442a-a08d-929546df1ebe
      properties:
        type:
          type: string
          enum:
            - activities
          default: activities
        attributes:
          type: object
          required:
            - recipient
            - from
            - message
          properties:
            recipient:
              type: string
            from:
              type: string
              format: uuid
            message:
              type: string
              format: uuid
      required:
        - type
        - attributes
    Activity:
      title: Activity
      allOf:
        - type: object
          properties:
            id:
              type: string
              format: uuid
          required:
            - id
        - $ref: '#/components/schemas/NewActivity'
      x-examples:
        Typical response:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          type: activities
          attributes:
            recipient: michael@customersupportbots.com
            from: dee192b0-275e-44a2-9c77-32b75da2f26f
            message: 3eb7c4fd-0d67-442a-a08d-929546df1ebe
  securitySchemes: {}
