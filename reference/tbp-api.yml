openapi: 3.0.0
info:
  title: TBP API
  version: '1.0'
  contact: {}
  description: TBP API
servers:
  - url: 'https://api.thebotplatform.com/v1.0'
paths:
  /interaction:
    post:
      summary: Headless interaction
      operationId: interaction
      responses:
        '200':
          $ref: '#/components/responses/InteractionReplyResponse'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      description: Facilitate "headless" interaction with the platform.  Use this endpoint if developing your own bot user interface.
      parameters:
        - schema:
            type: string
            enum:
              - interaction.readwrite.all
          in: header
          name: x-ext-auth-scope
          required: true
          description: interaction.readwrite.all
        - schema:
            type: string
          in: header
          name: content-type
          required: true
          description: application/json
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                data:
                  type: object
                  required:
                    - type
                    - attributes
                  additionalProperties: false
                  properties:
                    type:
                      type: string
                      enum:
                        - interaction
                      readOnly: true
                    attributes:
                      type: object
                      required:
                        - user
                        - input
                      additionalProperties: false
                      properties:
                        user:
                          type: object
                          required:
                            - id
                          additionalProperties: false
                          properties:
                            id:
                              type: string
                              example: 2ca467cb-60d1-4880-a0cd-afe6f5edbf15
                              readOnly: true
                          readOnly: true
                        input:
                          type: string
                          example: '__PAYLOAD__@BP:MESSAGE:789'
                          description: 'Either a platform payload from a button, or free-text input, such as a keyword configured on the platform'
                          readOnly: true
                      readOnly: true
                  readOnly: true
              required:
                - data
              readOnly: true
            examples:
              Trigger start of bot:
                value:
                  data:
                    type: interaction
                    attributes:
                      user:
                        id: 2ca467cb-60d1-4880-a0cd-afe6f5edbf15
                      input: __PAYLOAD__START
              Button payload:
                value:
                  data:
                    type: interaction
                    attributes:
                      user:
                        id: 2ca467cb-60d1-4880-a0cd-afe6f5edbf15
                      input: '__PAYLOAD__@BP:MESSAGE:789'
              Typed input:
                value:
                  data:
                    type: interaction
                    attributes:
                      user:
                        id: 2ca467cb-60d1-4880-a0cd-afe6f5edbf15
                      input: hello
        description: ''
  /interaction/user:
    post:
      summary: Create simple user ID
      operationId: user
      responses:
        '200':
          $ref: '#/components/responses/UserResponse'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
      parameters:
        - schema:
            type: string
          in: header
          name: x-ext-auth-scope
          description: interaction.readwrite.all
          required: true
        - schema:
            type: string
          in: header
          name: content-type
          description: application/json
          required: true
      description: Create a simple user ID suitable for use with the Interaction endpoint
  /activity:
    post:
      summary: Send a pre-defined message to a user
      operationId: activity-create
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Activity'
                required:
                  - data
              examples: {}
        '500':
          description: Internal Server Error
      description: Send a CMS message to a given user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/NewActivity'
              required:
                - data
            examples:
              base example:
                value:
                  data:
                    type: activity
                    attributes:
                      recipient: hello@thebotplatform.com
                      message:
                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
        description: ''
    parameters: []
  '/users/{user}':
    parameters:
      - schema:
          type: string
          example: hello@thebotplatform.com
        name: user
        in: path
        required: true
        description: email address or id
    patch:
      summary: Set multiple attributes on a user
      operationId: update-user-data
      responses:
        '204':
          description: No Content
        '500':
          description: Internal Server Error
      description: Set multiple attributes on a user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/User'
            examples:
              base example:
                value:
                  data:
                    type: user
                    attributes:
                      state:
                        - userattribute:
                            id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                          value: hello
                        - userattribute:
                            id: 124f6eca-6276-4993-bfeb-53cbbbba6f08
                          value: world
      parameters: []
  /messages:
    get:
      summary: List messages
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
                required:
                  - data
              examples: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
      operationId: get-bot-messages
      description: List messages for a bot identified by botID
      parameters: []
    parameters: []
  /userattributes:
    parameters: []
    get:
      summary: Bot user attribute list
      tags: []
      operationId: get-bot-userattributes
      description: List user attributes for a bot
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserAttribute'
                required:
                  - data
              examples: {}
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
    post:
      summary: Bot user attribute create
      operationId: create-bot-userattribute
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/UserAttribute'
              examples: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties: {}
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/NewUserAttribute'
            examples: {}
      description: Create user attribute for a bot
  /analytics:
    parameters: []
    get:
      summary: Bot analytics
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    type: array
                    uniqueItems: false
                    maxItems: 7
                    minItems: 5
                    items:
                      $ref: '#/components/schemas/Metric'
                required:
                  - data
              examples: {}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        '500':
          description: Internal Server Error
      operationId: get-bot-analytics
      parameters:
        - schema:
            type: string
            format: date
            example: '2020-11-21'
          in: query
          name: date
          required: true
      description: Return top-line analytics for a given date
  /activity/external:
    post:
      summary: Send a raw payload to a user
      operationId: activity-external-create
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ExternalActivity'
                required:
                  - data
              examples: {}
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  $ref: '#/components/schemas/NewExternalActivity'
              required:
                - data
            examples: {}
      description: |-
        Send a raw payload message to a given user

        Raw payloads can be found differently for each separate channel:
        - [Workplace](https://developers.facebook.com/docs/messenger-platform/reference/send-api/#message)
        - [Teams](https://docs.microsoft.com/en-us/graph/api/resources/chatmessage?view=graph-rest-beta)

        One or many raw payloads can be used in the `messages` array
    parameters: []
components:
  schemas:
    InteractionElementButton:
      type: object
      title: InteractionElementButton
      x-examples: {}
      additionalProperties: false
      properties:
        type:
          type: string
          enum:
            - postback
            - open_url
          description: 'When used within InteractionTypeQuickReply, type=postback'
          readOnly: true
        title:
          type: string
          example: Click me
          minLength: 1
          maxLength: 20
          readOnly: true
        destroy_all_on_interaction:
          type: boolean
          default: false
          description: 'When used within InteractionTypeQuickReply, destroy_all_on_interaction=true'
        url:
          type: string
          format: uri
          example: 'https://thebotplatform.com'
          description: Required if type=open_url
          readOnly: true
        actions:
          type: array
          description: Required if type=postback
          maxItems: 3
          items:
            $ref: '#/components/schemas/InteractionElementUserAction'
          readOnly: true
      required:
        - type
        - title
        - destroy_all_on_interaction
      readOnly: true
      description: ''
    InteractionElementCarouselCard:
      type: object
      title: InteractionElementCarouselCard
      x-examples: {}
      additionalProperties: false
      properties:
        title:
          type: string
          example: Card title
          minLength: 1
          maxLength: 80
          readOnly: true
        subtitle:
          type: string
          example: A subtitle
          minLength: 1
          maxLength: 80
          readOnly: true
        image:
          type: string
          format: url
          example: 'https://d3bwo7bwtzd8ff.cloudfront.net/25/1619691317_41b586905e6233e72b076191f8bf9512.png'
          description: 'A publicly accessible, absolute URL'
          readOnly: true
        buttons:
          type: array
          maxItems: 3
          items:
            $ref: '#/components/schemas/InteractionElementButton'
          readOnly: true
      required:
        - title
      readOnly: true
    InteractionTypeText:
      type: object
      title: InteractionTypeText
      additionalProperties: false
      properties:
        type:
          type: string
          enum:
            - text
          readOnly: true
        buttons:
          type: array
          maxItems: 3
          items:
            $ref: '#/components/schemas/InteractionElementButton'
      required:
        - type
      readOnly: true
    InteractionTypeCarousel:
      type: object
      title: InteractionTypeCarousel
      x-examples: {}
      additionalProperties: false
      properties:
        type:
          type: string
          enum:
            - carousel
          readOnly: true
        cards:
          type: array
          minItems: 1
          maxItems: 10
          items:
            $ref: '#/components/schemas/InteractionElementCarouselCard'
          readOnly: true
      required:
        - type
        - cards
      readOnly: true
    InteractionTypeMedia:
      type: object
      title: InteractionTypeMedia
      x-examples: {}
      additionalProperties: false
      properties:
        type:
          type: string
          enum:
            - image
            - video
            - audio
          readOnly: true
        url:
          type: string
          example: 'https://d3bwo7bwtzd8ff.cloudfront.net/25/1619691317_41b586905e6233e72b076191f8bf9512.png'
          description: 'A publicly accessible, absolute URL'
          readOnly: true
      required:
        - type
        - url
      readOnly: true
    InteractionElementUserAction:
      type: object
      title: InteractionElementUserAction
      x-examples: {}
      additionalProperties: false
      properties:
        id:
          type: string
          example: '@BP:MESSAGE:789'
        type:
          type: string
          enum:
            - trigger
      required:
        - id
        - type
      readOnly: true
    InteractionTypeQuickReply:
      type: object
      title: InteractionTypeQuickReply
      x-examples: {}
      additionalProperties: false
      properties:
        type:
          type: string
          enum:
            - quick_reply
          readOnly: true
        buttons:
          type: array
          maxItems: 13
          minItems: 1
          items:
            $ref: '#/components/schemas/InteractionElementButton'
      required:
        - type
        - buttons
      readOnly: true
    Message:
      title: Message
      type: object
      description: Message
      x-examples: {}
      properties:
        id:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - message
        attributes:
          type: object
          required:
            - name
          properties:
            name:
              type: string
              example: Welcome Message
            parts:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - text
                  text:
                    type: string
                    example: Welcome to the experience
                  buttons:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - postback
                            - open_url
                        title:
                          type: string
                          example: Click me to start
                        url:
                          type: string
                          format: uri
                          description: required if type=open_url
                        actions:
                          type: array
                          description: required if type=postback
                          items:
                            type: object
                            properties:
                              type:
                                type: string
                                enum:
                                  - send_message
                              id:
                                type: string
                                format: uuid
                            required:
                              - type
                              - id
                      required:
                        - type
                        - title
                required:
                  - type
      required:
        - id
        - type
        - attributes
    UserAttribute:
      title: UserAttribute
      description: User attribute
      allOf:
        - type: object
          properties:
            id:
              type: string
              format: uuid
          required:
            - id
        - $ref: '#/components/schemas/NewUserAttribute'
      x-examples: {}
    NewUserAttribute:
      title: NewUserAttribute
      type: object
      x-examples: {}
      description: ''
      properties:
        type:
          type: string
          enum:
            - userattribute
          default: userattribute
          minLength: 1
        attributes:
          type: object
          required:
            - name
          properties:
            name:
              type: string
              example: Attr1
              minLength: 1
              default: Attr1
            is_pii:
              type: boolean
              default: false
      required:
        - type
        - attributes
    NewActivity:
      title: NewActivity
      type: object
      x-examples:
        base example:
          type: activity
          attributes:
            recipient: hello@thebotplatform.com
            message:
              id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      description: Used to send a message to a user
      properties:
        type:
          type: string
          default: activity
          example: activity
        attributes:
          type: object
          minProperties: 1
          required:
            - recipient
            - message
          properties:
            recipient:
              type: string
              description: the email address or id of the user you want to send the message to
              example: hello@thebotplatform.com
              default: hello@thebotplatform.com
            message:
              type: object
              format: uuid
              required:
                - id
              minProperties: 1
              properties:
                id:
                  type: string
                  format: uuid
                  description: the id of the message you want to send
                  example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  default: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  minLength: 1
      required:
        - type
        - attributes
    Activity:
      title: Activity
      allOf:
        - type: object
          properties:
            id:
              type: string
              format: uuid
          required:
            - id
        - $ref: '#/components/schemas/NewActivity'
      x-examples: {}
    Metric:
      title: Metric
      type: object
      x-examples: {}
      properties:
        id:
          type: string
          enum:
            - ACTIVE_PEOPLE
            - NEW_VISITORS
            - UNIQUE_VISITORS
            - SUBSCRIBERS
            - UNSUBSCRIBES
            - TOTAL_MESSAGES_SENT
            - ENGAGEMENT_PER_USER
        type:
          type: string
          enum:
            - metric
        attributes:
          type: object
          required:
            - value
            - title
            - date
          properties:
            value:
              type: number
            title:
              type: string
            date:
              type: string
              format: date
      required:
        - id
        - type
        - attributes
    NewExternalActivity:
      title: NewExternalActivity
      type: object
      x-examples: {}
      properties:
        type:
          type: string
          enum:
            - external-activity
        attributes:
          type: object
          required:
            - recipient
            - messages
          properties:
            recipient:
              type: string
            messages:
              type: array
              items:
                type: object
                properties:
                  text:
                    type: string
                    default: world
                    example: world
      required:
        - type
        - attributes
    ExternalActivity:
      title: ExternalActivity
      allOf:
        - type: object
          properties:
            id:
              type: string
              format: uuid
          required:
            - id
        - $ref: '#/components/schemas/NewExternalActivity'
      x-examples: {}
    Errors:
      title: Errors
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
    Error:
      title: Error
      type: object
      properties:
        status:
          type: string
        title:
          type: string
        detail:
          type: string
      required:
        - status
        - title
    User:
      title: User
      type: object
      x-examples:
        example-1:
          type: user
          attributes:
            state:
              - userattribute:
                  id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                value: string
      properties:
        type:
          type: string
          enum:
            - user
          default: user
        attributes:
          type: object
          properties:
            state:
              type: array
              items:
                type: object
                properties:
                  userattribute:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: ''
                  value:
                    type: string
      required:
        - type
  securitySchemes:
    token:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://api.thebotplatform.com/oauth2/token'
          refreshUrl: 'https://api.thebotplatform.com/oauth2/token'
          scopes: {}
        authorizationCode:
          authorizationUrl: 'https://api.thebotplatform.com/oauth2/auth'
          tokenUrl: 'https://api.thebotplatform.com/oauth2/token'
          refreshUrl: 'https://api.thebotplatform.com/oauth2/token'
          scopes: {}
      description: ''
  responses:
    InteractionReplyResponse:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              data:
                type: object
                additionalProperties: false
                required:
                  - type
                  - attributes
                properties:
                  type:
                    type: string
                    enum:
                      - interaction-reply
                  attributes:
                    type: object
                    additionalProperties: false
                    required:
                      - user
                      - output
                    properties:
                      user:
                        type: object
                        additionalProperties: false
                        required:
                          - id
                        properties:
                          id:
                            type: string
                            example: 2ca467cb-60d1-4880-a0cd-afe6f5edbf15
                            readOnly: true
                      output:
                        type: array
                        minItems: 0
                        items:
                          anyOf:
                            - $ref: '#/components/schemas/InteractionTypeText'
                            - $ref: '#/components/schemas/InteractionTypeCarousel'
                            - $ref: '#/components/schemas/InteractionTypeMedia'
                            - $ref: '#/components/schemas/InteractionTypeQuickReply'
                        readOnly: true
                    readOnly: true
                readOnly: true
            required:
              - data
            readOnly: true
          examples: {}
    UserResponse:
      description: Example response
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - user
                  attributes:
                    type: object
                    required:
                      - user
                    properties:
                      user:
                        type: object
                        required:
                          - id
                        properties:
                          id:
                            type: string
                            format: uuid
                required:
                  - type
                  - attributes
          examples: {}
security:
  - token: []
x-samples-languages:
  - curl
  - node
  - php
  - csharp
  - python
  - java
  - go
